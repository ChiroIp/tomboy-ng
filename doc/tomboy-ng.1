.TH TOMBOY-NG 1
.SH NAME 
tomboy-ng \- manage a collection of notes using a simple markup
.SH SYNOPSIS 
.B tomboy-ng
[\fB\-h\fR]
[\fB\-g\fR]
[\fB-\-gnome3\fR]
[\fB\-\-debug\-sync\fR] 
[\fB\-\-debug\-index\fR] 
[\fB\-\-debug-log\fR=\fILOGFILE\fR]
[\fB\-\-lang\fR=\fICC\fR]
[\fB\-\-config\-dir\fR=\fIPATH_to_DIR\fR]
[\fB\-o\fR \fIPATH_to_NOTE\fR] 
[\fB\-\-open-note\fR=\fIPATH_to_NOTE\fR]
[\fIPATH_to_NOTE\fR]

.SH DESCRIPTION
.B tomboy-ng
is a rewrite of the much loved Tomboy Notes. It runs on Linux, Windows and MacOS. Is possibly file compatible with Tomdroid and GNote. Tomboy-ng notes support Bold, Italic, Strikethrough, Highlight and Underline in four sizes. It will sync notes with other systems using Tomboy's File Sync model but not yet Network Sync using Rainy or Graphal.

Many users will want to have tomboy-ng start at logon time, it will put an Icon in the System Tray and you can interact with it via that Icon. However, a small window is also opened, it can be dismissed if you see the system tray icon. Some Gnome3 distros do not show the system tray icon, while you can keep that small window visible, see the Github wiki pages (below) for much better solutions. A command line switch (-g or --gnome3) protects the small window from accidental dismissal.

Tomboy-ng requires the gtk2 libraries be available on Linux, uses native libraries on Windows and Mac.

While options below are familiar to Linux users, Mac and Windows users may like to look at some examples further down to see how to use them.

.SH OPTIONS
.TP
.BR \-h 
Print some help and exit.

.TP
.BR \-g ", " \-\-gnome3\fR 
Run gnome3 mode, needed on Linux releases based on gnome3 3.28 or later but not the Ubuntu flavoured ones as they include a usable System Tray. Prevents the application from completely hiding when not in use.

.TP
.BR \-\-debug-sync
Generate a lot of logging information on the console during a sync process. Intended for debugging.

.TP
.BR \-\-debug-index
Generate a lot of logging information on the console while indexing the notes repo. Intended for debugging.

.TP
.BR \-\-debug\-log=\fILOGFILE
Direct debug infor to a file, necessary to see that output on Windows and Mac, useful on Linux. LOGFILE is a filename and a (writable) path to that filename. On Windows, make a desktop shortcut to tomboy-ng and then edit the Shortcut->Target parameter to something like -

"c:\\Program Files\\tomboy-ng64.exe" --debug-log=%userprofile%\\debug.txt

.TP
.BR \-\-lang=\fICC\fR
Tomboy-ng normally picks up its language from the OS and does an auto switch. However, its possible to force a language at startup using the two letter language code, ie es for spanish, nl for dutch.

.TP
.BR \-c ", " \-\-config\-dir=\fIPATH_to_DIR\fR
Create or use an alternative config. That config could, for example, specify an alterative location to store notes and sync against a different file sync repository.

.TP
.BR \-o ", " \-\-open-note=\fIPATH_to_NOTE\fR
Open a note in single note mode. In this mode, a seperate process runs, it does not have access to the normal notes location, nor sync but can read, display and write back to a stand alone note. If the note name does not exist, a new note is created. If the note name specifies a plain text file or a rtf file, the contents of that file will be imported into a new note and that note will be named as specified on the command line but with an extension of ".note".  In this mode, the note remains in its existing location, it is not moved to the tomboy-ng notes location, it is not synced, nor searched by tomboy-ng in its normal mode. Note that the switch (-o or --open-note) is optional, "tomboy-ng some.note" will works as well.


.SH EDITING KEYBOARD SHORTCUTS

The following keyboard shortcuts apply when editing a note.

.IB Ctrl\ B 
Bold the selected Text

.IB Ctrl\ I
Italicise the selected Text

.IB Ctrl\ S
Strikeout the selected Text

.IB Ctrl\ T 
Fixed width font ('T' for typewriter ?)

.IB Ctrl\ H
Highlight the selected Text

.IB Ctrl\ U
Underline the selected font

.IB Ctrl\ F
Find in this note

.IB Ctrl\ Shift\ F
Open the Notes Search Box

.IB Ctrl\ N
Open a New Note

.IB Ctrl\ F4
Quit (ie close) this Note



.SH DEBUGGING
tomboy-ng accepts a couple of debug switches as noted above. They will write detailed progress reports relating to their section of the application to the console. However, Windows and Mac do not, for this purpose, have a console. But can be told to capture this log info to a file using another command line switch or by setting an env variable that specifies a file name. Please ensure you have permission to write to the location specified.

tomboy-ng  \-\-debug-log=%userprofile%\\debug.txt  \-\-debug-sync

set tomboy-ng_debuglog=c:\\%userprofile%\\debug.txt

Mac users can do something similar : 

open /Applications/tomboy-ng.app \-\-args     "\-\-debug-log=$HOME/tomboy-ng.log"  "\-\-debug-sync"

Linux users who need a debug logfile can also :

tomboy-ng \-\-debug-sync \-\-debug-log=$HOME/tomboy-ng.log

Windows users should do something like this -

Rightclick the startbutton and select "run".  In the field, enter this command line exactly as show (including the inverted commas) - 

"C:\\Program Files\\tomboy-ng\\tomboy-ng.exe" --debug-index --debug-log=%userprofile%\\Desktop\\tomboy-log.txt

Press enter, tomboy-ng should start up normally. Close it. A file called tomboy-log.txt will have been created on your desktop.

If you intend to post such a log file to (eg) the Tomboy help system, do please check through it first to ensure there is nothing there you don't want the world to see.


.SH "SEE ALSO"
.I https://github.com/tomboy-notes/tomboy-ng

There you will find several wiki pages going into far more detail than here. 

.SH BUGS
Please send bug reports to the Tomboy mailing list
(tomboy-list@beatniksoftware.com) or via Github see above.




